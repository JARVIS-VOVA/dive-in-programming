=begin
  Получить ссылку на элемент и присвоить ему значение можно с помощью методов класса [] и []= соответственно.
  Каждый из них принимает один целочисленный параметр — либо пару целых чисел (начало и конец), либо диапазон.
  Отрицательные индексы отсчитываются от конца массива, начиная с -1.

  Специальный метод экземпляра at реализует простейший случай получения ссылки на элемент.
  Поскольку он может принимать только один целочисленный параметр, то работает чуть быстрее.
=end


a = [1, 2, 3, 4, 5, 6]
p b = a[0]               # 1
p с = a.at(0)            # 1
p d = a[-2]              # 5
p е = a.at(-2)           # 5
p f = a[9]               # nil
p g = a.at(9)            # nil
p h = a[3,3]             # [4, 5, 6]
p i = a[2..4]            # [3, 4, 5]
p j = a[2...4]           # [3, 4]

p a[1] = 8               # [1, 8, 3, 4, 5, 6]
p a[1,3] = [10, 20, 30]  # [1, 10, 20, 30, 5, 6]
p a[0..3] = [2, 4, 6, 8] # [2, 4, 6, 8, 5, 6]
p a[-1] = 12             # [2, 4, 6, 8, 5, 12]

=begin
  В следующем примере ссылка на элемент, расположенный за концом массива, приводит к росту массива.
  Отметим, что подмассив можно заменить другим массивом, содержащим больше элементов, чем было.
  В этом случае массив также автоматически вырастет.
=end

p k = [2, 4, 6, 8, 10]
p k[1..2] = [3, 3, 3] # [2, 3, 3, 3, 8, 10]
p k[7] = 99           # [2, 3, 3, 3, 8, 10, nil, 99]

=begin
  Наконец, если одному элементу присвоить в качестве значения массив, то на место этого элемента будет вставлен вложенный массив (в отличие от присваивания диапазону):
=end

m = [1, 3, 5, 7, 9]
p m[2] = [20, 30]    # [1,3, [20, 30], 7, 9]
# С другой стороны...
m = [1, 3, 5, 7, 9]
p m[2..2] = [20, 30] # [1, 3, 20, 30, 7, 9]

m = [1, 3, 5, 7, 9]
p m[2..3] = [20, 30] # [1, 3, 20, 30, 9]

=begin
  Метод slice — синоним метода []
=end

p x = [0, 2, 4, 6, 8, 10, 12]
p а = x.slice(2)    # 4
p b = x.slice(2,4)  # [4, 6, 8, 10]
p с = x.slice(2..4) # [4, 6, 8]

=begin
  Специальные методы first и last возвращают первый и последний элемент массива соответственно.
  Если массив пуст, они возвращают nil
=end

p x = %w[alpha beta gamma delta epsilon]
p a = x.first # "alpha"
p b = x.last  # "epsilon"

p a = %w{ a b c d e f }     # ["a", "b", "c", "d", "e", "f"]
p a.values_at(1, 3, 5)      # ["b", "d", "f"]
p a.values_at(1, 3, 5, 7)   # ["b", "d", "f", nil]
