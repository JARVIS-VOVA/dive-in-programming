=begin
  Для создания массива применяется специальный метод класса [];
  перечисленные внутри скобок данные помещаются во вновь созданный массив. Ниже показаны три способа вызвать этот метод.
  (Массивы а b и инициализируются одинаково.)
=end

p a = Array.[](1,2,3,4)
p b = Array[1,2,3,4]
p с = [1,2,3,4]

=begin
  Имеется также метод класса new, который принимает 0,1 или 2 параметра.
  Первый параметр задает начальный размер массива (число элементов в нем).
  Второй определяет начальное значение каждого элемента:
=end

p d = Array.new            # Создать пустой массив.
p е = Array.new(3)         # [nil, nil, nil]
p f = Array.new(3, "blah") # ["blah", "blah", "blah"]

=begin
  Обратите особое внимание на последний пример.
  Типичная «ошибка начинающего» — думать, что все объекты в этом массиве различны.
  На самом деле это три ссылки на один и тот же объект.
  Поэтому, если вы его измените (а не замените другим), то изменятся все элементы массива.
  Чтобы не попасть в эту ловушку, воспользуйтесь блоком.
  Блок будет вычисляться по одному разу для каждого элемента, поэтому все элементы окажутся различными объектами:
=end

p f[0].capitalize!            # f равно: ["Blah", "Blah", "Blah"]
# но
f[1] = 3                      # f равно: ["Blah", "Blah", "Blah"]
p f                           # f равно: ["Blah", 3, "Blah"]

p g = Array.new(3) { "blah" } # ["blah", "blah", "blah"]
p g[0].capitalize!            # g равно: ["Blah", "blah", "blah"]
