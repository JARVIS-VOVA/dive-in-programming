=begin
  downcase - переводит символы всей строки в нижний регистр, а метод
  upcase - в верхний:
=end

p s1 = "Бостонское чаепитие"
p s2 = s1.downcase # "бостонское чаепитие"
p s3 = s2.upcase   # "БОСТОНСКОЕ ЧАЕПИТИЕ"

# Метод capitalize представляет первый символ строки в верхнем регистре, а все остальные - в нижнем:

p s4 = s1.capitalize # "Бостонское чаепитие"
p s5 = s2.capitalize # "Бостонское чаепитие"
p s6 = s3.capitalize # "Бостонское чаепитие"

# Метод swapcase изменяет регистр каждой буквы на противоположный:

p s7 = "ЭТО БЫВШИЙ попугай."
p s8 = s7.swapcase # "это бывший ПОПУГАЙ."

# Начиная с версии 1.8, в язык Ruby включен метод casecmp, который работает аналогично стандартному методp у <=>, но игнорирует регистр:

p n1 = "abc".casecmp("xyz") # -1
p n2 = "abc".casecmp("XYZ") # -1
p n3 = "ABC".casecmp("xyz") # -1
p n4 = "ABC".casecmp("abc") # 0
p n5 = "xyz".casecmp("abc") # 1

# У каждого из перечисленных методов имеется аналог, осуществляющий модификацию «на месте»
# (upcase!, downcase!, capitalize!, swapcase!)

string = 'Qq'

if string=~ /[a-z]/
 p "строка содержит символы в нижнем регистре"
end
if string =~ /[A-Z]/
 p "строка содержит символы в верхнем регистре"
end
if string =~ /[[:upper:]]/ and string =~ /[[:lower:]]/
 p "строка содержит символы в разных регистрах"
end
if string[0..0] =~ /[A-Z]/
 p "строка начинается с прописной буквы"
end
