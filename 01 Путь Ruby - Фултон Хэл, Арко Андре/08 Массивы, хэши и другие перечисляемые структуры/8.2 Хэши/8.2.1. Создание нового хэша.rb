# Для создания хэша служит специальный метод класса []
# Данные, перечисленные в квадратных скобках, образуют ассоциированные пары.
# Ниже показаны шесть способов вызвать этот метод

a1 = Hash.[]("flat",3,"curved",2)
a2 = Hash.[]("flat"=>3,"curved"=>2)
b1 = Hash["flat",3,"curved",2]
b2 = Hash["flat"=>3,"curved"=>2]
c2 = {"flat"=>3,"curved"=>2}
# Для a1, b1 и c1 число элементов должно быть четным.

# Есть также метод new, который может принимать параметр, задающий значение по умолчанию.
# Отметим, что это значение не является частью хэша — оно просто используется вместо nil

d = Hash.new         # Создать пустой хэш.
е = Hash.new(99)     # Создать пустой хэш. # значением по умолчанию - 99
f = Hash.new("а"=>3) # Создать пустой хэш.

p d # {}
p е # {}
p f # {}

p е["anglеd"]          # 99  # значением по умолчанию
p е.inspect            # {}
p f["b"]               # {"а"=>3} (значением по умолчанию является тоже хэш).
p f.inspect            # {}
